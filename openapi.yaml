openapi: 3.0.0
info:
  title: Your Flask App
  description: An example Flask app with JWT authentication and file management
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        "401":
          description: Unauthorized

  /protected:
    get:
      summary: Protected route
      security:
        - JWT: []
      responses:
        "200":
          description: Successful access
          content:
            application/json:
              schema:
                type: object
                properties:
                  logged_in_as:
                    type: string
        "401":
          description: Unauthorized

  /available_files:
    get:
      summary: Get available files for the logged-in user
      security:
        - JWT: []
      responses:
        "200":
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Image"
        "401":
          description: Unauthorized

  /upload:
    post:
      summary: Upload a file
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: File uploaded successfully
        "401":
          description: Unauthorized

  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistration"
      responses:
        "200":
          description: User registered successfully
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /delete_image:
    post:
      summary: Delete an image
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image_id:
                  type: integer
      responses:
        "200":
          description: Image deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Image not found or unauthorized

components:
  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string

    Image:
      type: object
      properties:
        id:
          type: integer
        filename:
          type: string
        user_id:
          type: integer
        size:
          type: integer
        created_at:
          type: string
          format: date-time

  securitySchemes:
    JWT:
      type: apiKey
      in: header
      name: Authorization
